# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      env:
        EXCEPT_FILE: ${{ secrets.EXCEPT_FILE }}
      run: |
            echo $EXCEPT_FILE | base64 -d > newTolkuchka/Secrets.cs
            dotnet build --no-restore
            dotnet publish -c Release
    - name: List default build artifacts
      run: |
            echo "Listing contents of the default build output directory:"
            ls -l newTolkuchka/bin/Release/net7.0/publish
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Deploy to server
      if: success()
      env:
        DEPLOY_SSH_KEY: ${{ secrets.SSH_KEY }}
        SERVER_IP: ${{ secrets.IP }}        
        USER: ${{ secrets.USER }}
        SERVER_DEST: ${{ secrets.DEST }}
        SERVER_PORT: ${{ secrets.PORT }}        
      run: |
        # Install SSH client
        sudo apt-get install -y openssh-client

        # Write the SSH key to a file
        echo "$DEPLOY_SSH_KEY" > deploy_key.pem
        chmod 400 deploy_key.pem

        # Use SCP to copy the build output to the server
        scp -i deploy_key.pem -o StrictHostKeyChecking=no -P $SERVER_PORT -r newTolkuchka/bin/Release/net8.0/publish/* $USER@$SERVER_IP:$SERVER_DEST
        ssh -o StrictHostKeyChecking=no -i deploy_key.pem -p $SERVER_PORT $USER@$SERVER_IP 'sudo /bin/systemctl restart kestrel-tolkuchka.service'

        # Cleanup
        rm -f deploy_key
