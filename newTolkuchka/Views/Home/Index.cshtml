@{
    IEnumerable<Category> mainCategories = ViewBag.MainCategories;
    IList<(Category, IEnumerable<string>)> categories = ViewBag.MainCategoriesProducts;
    IList<Slide> mainSlides = ViewBag.MainSlides;
    IEnumerable<string> newProducts = ViewBag.NewProducts;
    IEnumerable<string> recProducts = ViewBag.RecProducts;
}

<div class="row justify-content-center">
    <div class="col-4 d-none d-md-block list-group">
        @foreach (Category c in mainCategories)
        {
            <a href="@PathService.GetModelUrl(ConstantsService.CATEGORY, c.Id)" class="list-group-item list-group-item-action px-3 border-0 text-black fs1 text-end">
                @CultureProvider.GetLocalName(c.NameRu, c.NameEn, c.NameTm)
            </a>
        }
    </div>
    <div class="col-12 col-md-8">
        <div id="carousel-main" class="carousel slide" data-mdb-ride="carousel">
            <div class="carousel-inner rounded-4">
                @{
                    string cl = "carousel-item";
                    for (int i = 0; i < mainSlides.Count; i++)
                    {
                        if (i == mainSlides.Count - 1)
                            cl = cl + " active";
                        <div class="@cl">
                            <a href="@mainSlides[i].Link">
                                <img src="@PathService.GetImageRelativePath(ConstantsService.SLIDE, mainSlides[i].Id, CultureProvider.GetLocalNumberEx())" class="d-block w-100" alt="@Localizer["commercial"]" />
                            </a>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
@{
    await Html.RenderPartialAsync("_IndexHeader", (ConstantsService.NOVELTIES, 0, "", newProducts));
    await Html.RenderPartialAsync("_IndexHeader", (ConstantsService.RECOMMENDED, 0, "",recProducts));
    foreach (var c in categories)
    {
        await Html.RenderPartialAsync("_IndexHeader", (ConstantsService.CATEGORY, c.Item1.Id, CultureProvider.GetLocalName(c.Item1.NameRu, c.Item1.NameEn, c.Item1.NameTm), c.Item2));
    }
}