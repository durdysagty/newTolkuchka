// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using newTolkuchka.Models;

#nullable disable

namespace newTolkuchka.Models.Migs
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221216195836_FromProductToModel")]
    partial class FromProductToModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("newTolkuchka.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "DELL"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Reebok"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kensington"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsForHome")
                        .HasColumnType("bit");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId", "NameEn")
                        .IsUnique();

                    b.HasIndex("ParentId", "NameRu")
                        .IsUnique();

                    b.HasIndex("ParentId", "NameTm")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsForHome = true,
                            NameEn = "Office equipment",
                            NameRu = "Оргтехника",
                            NameTm = "Ofis tehnikasy",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 2,
                            IsForHome = false,
                            NameEn = "Mobile devices",
                            NameRu = "Мобильные устройства",
                            NameTm = "Mobil gurluşlar",
                            NotInUse = false,
                            Order = 1,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 3,
                            IsForHome = true,
                            NameEn = "Home equipment",
                            NameRu = "Бытовая техника",
                            NameTm = "Öy tehnikasy",
                            NotInUse = false,
                            Order = 2,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 4,
                            IsForHome = true,
                            NameEn = "Clothing and textiles",
                            NameRu = "Одежда и текстиль",
                            NameTm = "Eşik we tekstil",
                            NotInUse = false,
                            Order = 3,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 5,
                            IsForHome = true,
                            NameEn = "Food",
                            NameRu = "Еда",
                            NameTm = "Iýmit",
                            NotInUse = false,
                            Order = 4,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 6,
                            IsForHome = false,
                            NameEn = "Computers",
                            NameRu = "Компьютеры",
                            NameTm = "Kompýuterler",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsForHome = false,
                            NameEn = "Computer parts",
                            NameRu = "Компьютерные комплектующие",
                            NameTm = "Kompýuter enjamlary",
                            NotInUse = false,
                            Order = 1,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 8,
                            IsForHome = false,
                            NameEn = "Monobloks",
                            NameRu = "Моноблоки",
                            NameTm = "Monobloklar",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 6
                        },
                        new
                        {
                            Id = 9,
                            IsForHome = false,
                            NameEn = "Notebooks",
                            NameRu = "Ноутбуки",
                            NameTm = "Noutbuklar",
                            NotInUse = false,
                            Order = 1,
                            ParentId = 6
                        },
                        new
                        {
                            Id = 10,
                            IsForHome = false,
                            NameEn = "Phones, tabs & accessories",
                            NameRu = "Телефоны, планшеты и аксессуары",
                            NameTm = "Telefonlar, planşetler we aksesuarlar",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsForHome = false,
                            NameEn = "Mobile phones",
                            NameRu = "Мобильные телефоны",
                            NameTm = "Öyjükli telefonlar",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 10
                        },
                        new
                        {
                            Id = 12,
                            IsForHome = false,
                            NameEn = "Tablets",
                            NameRu = "Планшеты",
                            NameTm = "Planşetler",
                            NotInUse = false,
                            Order = 1,
                            ParentId = 10
                        },
                        new
                        {
                            Id = 13,
                            IsForHome = false,
                            NameEn = "Brand PCs",
                            NameRu = "Брендовые компьютеры",
                            NameTm = "Brend kompýuterler",
                            NotInUse = false,
                            Order = 2,
                            ParentId = 6
                        },
                        new
                        {
                            Id = 17,
                            IsForHome = false,
                            NameEn = "PC accessories",
                            NameRu = "Аксессуары для компьютеров",
                            NameTm = "Kompýuter esbaplary",
                            NotInUse = false,
                            Order = 2,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 15,
                            IsForHome = false,
                            NameEn = "Notebook stands",
                            NameRu = "Подставки для ноутбуков",
                            NameTm = "Noutbuk goltuklary",
                            NotInUse = false,
                            Order = 0,
                            ParentId = 17
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryAdLink", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("StepParentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "StepParentId");

                    b.ToTable("CategoryAdLinks");
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryModelAdLink", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("CategoryModelAdLinks");
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryProductAdLink", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProductAdLinks");
                });

            modelBuilder.Entity("newTolkuchka.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("PriceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RealRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CodeName")
                        .IsUnique()
                        .HasFilter("[CodeName] IS NOT NULL");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeName = "USD",
                            PriceRate = 1m,
                            RealRate = 1m
                        },
                        new
                        {
                            Id = 2,
                            CodeName = "TMT",
                            PriceRate = 20.5m,
                            RealRate = 19.5m
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hash = "1",
                            Login = "ayna",
                            Password = "3XX32n4h8NrkNSYU3gvK2g==",
                            PositionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Hash = "1",
                            Login = "durdy",
                            Password = "toc3DuDZ9Sppru9CHY/M5g==",
                            PositionId = 2
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Act")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Employee")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Entity")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("newTolkuchka.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Buyer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceAddress")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("InvoiceEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoicePhone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTimeOffset?>("PaidDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("newTolkuchka.Models.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId", "Name")
                        .IsUnique();

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "iPhone"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "iPad"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            Name = "Galaxy"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 2,
                            Name = "The Frame"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            Name = "Latitude"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            Name = "Inspiron"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 4,
                            Name = "Yeezy"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 4,
                            Name = "Predator"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DescEn")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("DescRu")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("DescTm")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int?>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WarrantyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeId");

                    b.HasIndex("WarrantyId");

                    b.HasIndex("LineId", "Name")
                        .IsUnique()
                        .HasFilter("[LineId] IS NOT NULL");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 0,
                            DescEn = "Powerful processor, elegant design, extended screen color range, the ability to connect two pairs of headphones at the same time, and much more - you get it all with the incredible performance of the 32nd generation Apple iPhone SE! It has everything you love - and more! Apple iPhone SE 3 is equipped with the fastest A15 Bionic processor, which performs any tasks quickly and efficiently! This is a real technology of the future, which combines low energy consumption with high performance. Apple iPhone SE 3 is designed to be your ideal smartphone!",
                            DescRu = "Мощный процессор, элегантный дизайн, расширенный цветовой диапазон экрана, возможность подключения двух пар наушников одновременно, и многое другое — все это вы получите с невероятно производительным Apple iPhone SE 32-го поколения! В нём есть все что вы любите — и даже больше! Apple iPhone SE 3 оснащен самым быстрым процессором A15 Bionic, который выполняет любые поставленные задачи быстро и эффективно! Это настоящая технология будущего, которая совмещает в себе низкую энергозатратность при высокой работоспособности. Apple iPhone SE 3 создан, чтобы стать вашим идеальным смартфоном!",
                            DescTm = "Güýçli prosessor, ajaýyp dizaýn, giňeldilen ekran reňk diapazony, bir wagtyň özünde iki jübüt nauşnik birikdirmek ukyby we başga-da köp zat - hemmesini 32-nji nesil Apple iPhone SE-niň ajaýyp öndürijiligi bilen alarsyňyz! Onda siziň söýýän zatlaryňyzyň hemmesi we başgalar bar! Apple iPhone SE 3, islendik meseläni çalt we netijeli ýerine ýetirýän iň çalt A15 Bionic prosessor bilen enjamlaşdyrylandyr! Bu, pes energiýa sarp edilişini ýokary öndürijilik bilen birleşdirýän geljegiň hakyky tehnologiýasy. Apple iPhone SE 3 ideal smartfon siziň üçin döredildi!",
                            LineId = 1,
                            Name = "SE 2022",
                            TypeId = 0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 0,
                            DescEn = "Super Retina XDR display with ProMotion technology and fast, smooth response. A massive upgrade to the camera system that opens up completely new possibilities. Exceptional strength. A15 Bionic is the fastest iPhone chip. And impressive battery life. Everything is Pro. Surgical stainless steel, Ceramic Shield panel, reliable water protection (IP68) - all this is incredibly beautiful and exceptionally durable. Meet the Super Retina XDR display with ProMotion technology. It has an adaptive refresh rate up to 120Hz and amazing graphics performance - touch and be amazed.",
                            DescRu = "Дисплей Super Retina XDR с технологией ProMotion и быстрым, плавным откликом. Грандиозный апгрейд системы камер, открывающий совершенно новые возможности. Исключительная прочность. A15 Bionic — самый быстрый чип для iPhone. И впечатляющее время работы без подзарядки. Всё это Pro. Хирургическая нержавеющая сталь, панель Ceramic Shield, надёжная защита от воды (IP68) — всё это невероятно красиво и исключительно прочно. Встречайте дисплей Super Retina XDR с технологией ProMotion. У него адаптивная частота обновления до 120 Гц и великолепная графическая производительность — прикоснитесь и удивитесь.",
                            DescTm = "ProMotion tehnologiýasy we çalt, rahat seslenme bilen Super Retina XDR displeýi. Doly täze mümkinçilikleri açýan kamera ulgamyna köpçülikleýin täzeleniş. Adatdan daşary güýç. “A15 Bionic” iň çalt “iPhone” çipidir. Batareýanyň täsirli ömri. Hemme zat Pro. Hirurgiki poslamaýan polat, keramiki galkan paneli, ygtybarly suw goragy (IP68) - bularyň hemmesi ajaýyp owadan we ajaýyp. ProMotion tehnologiýasy bilen Super Retina XDR ekrany bilen tanyşyň. 120Hz-a çenli uýgunlaşdyrylan täzeleniş tizligi we ajaýyp grafiki öndürijiligi bar - degiň we haýran galyň.",
                            LineId = 1,
                            Name = "13 Pro",
                            TypeId = 0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 0,
                            DescEn = "Super Retina XDR display with ProMotion technology and fast, smooth response. A massive upgrade to the camera system that opens up completely new possibilities. Exceptional strength. A15 Bionic is the fastest iPhone chip. And impressive battery life. Everything is Pro. Surgical stainless steel, Ceramic Shield panel, reliable water protection (IP68) - all this is incredibly beautiful and exceptionally durable. This upgrade significantly upgrades both the hardware and the software. Macro mode is now available for the ultra-wide camera, 3x optical zoom for the telephoto camera, and night mode is supported on all three cameras.",
                            DescRu = "Дисплей Super Retina XDR с технологией ProMotion и быстрым, плавным откликом. Грандиозный апгрейд системы камер, открывающий совершенно новые возможности. Исключительная прочность. A15 Bionic — самый быстрый чип для iPhone. И впечатляющее время работы без подзарядки. Всё это Pro. Хирургическая нержавеющая сталь, панель Ceramic Shield, надёжная защита от воды (IP68) — всё это невероятно красиво и исключительно прочно. В этом апгрейде значительно обновлены и аппаратная часть, и программное обеспечение. Теперь для сверхширокоугольной камеры доступен режим макросъёмки, для телефотокамеры — трёхкратный оптический зум, а ночной режим поддерживается на всех трёх камерах.",
                            DescTm = "ProMotion tehnologiýasy we çalt, rahat seslenme bilen Super Retina XDR displeýi.Doly täze mümkinçilikleri açýan kamera ulgamyna köpçülikleýin täzeleniş.Adatdan daşary güýç. “A15 Bionic” iň çalt “iPhone” çipidir.Batareýanyň täsirli ömri.Hemme zat Pro.Hirurgiki poslamaýan polat, keramiki galkan paneli, ygtybarly suw goragy(IP68) - bularyň hemmesi ajaýyp owadan we ajaýyp.Bu täzelenme enjamlary we programma üpjünçiligini ep - esli ýokarlandyrýar.Ultra giň kamera üçin makro re modeimi, telefon kamerasy üçin 3x optiki ýakynlaşdyrma we üç kameranyň hemmesinde gijeki re modeim goldanýar.",
                            LineId = 1,
                            Name = "13 Pro Max",
                            TypeId = 0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 0,
                            DescEn = "The OLED display has become 28% brighter - up to 800 cd/ m². Everything is clearly visible on it even on the sunniest day. And the brightness when viewing content in HDR reaches 1200 cd/ m². You will be able to distinguish the smallest shades of black and white - as well as all other colors. At the same time, the display consumes battery power even more economically than before. The Super Retina XDR display features an incredibly high pixel density, making photos, videos and text look amazingly crisp. And thanks to the smaller area of ​​the TrueDepth camera, there is now more room for the image on the display.iPhone 13 has up to 2.5 hours longer battery life.The A15 Bionic processor and TrueDepth camera also power Face ID, an incredibly secure authentication technology.The ultra - fast A15 Bionic chip powers Cinema Effect, Photo Styles and more.Secure Enclave protects personal data, including Face ID and contacts.And the new chip increases the battery life.",
                            DescRu = "Дисплей OLED стал на 28% ярче — до 800 кд/ м². На нём всё хорошо видно даже в самый солнечный день. А яркость при просмотре контента в HDR достигает 1200 кд/ м². Вы сможете различить мельчайшие оттенки чёрного и белого — как и всех остальных цветов. При этом дисплей расходует заряд аккумулятора ещё более экономно, чем прежде. Дисплей Super Retina XDR отличается невероятно высокой плотностью пикселей — фотографии, видео и текст выглядят поразительно чётко. А благодаря уменьшенной площади камеры TrueDepth на дисплее теперь больше места для изображения. iPhone 13 работает от аккумулятора до 2,5 часов дольше. Процессор A15 Bionic и камера TrueDepth также обеспечивают работу Face ID, невероятно надёжной технологии аутентификации. Сверхбыстрый чип A15 Bionic обеспечивает работу режима «Киноэффект», фотографических стилей и других функций. Secure Enclave защищает персональные данные, в том числе Face ID и контакты. А ещё новый чип увеличивает время работы от аккумулятора.",
                            DescTm = "OLED ekrany 28 % ýagtylandy - 800 cd / m² çenli.Everythinghli zat iň güneşli günlerde - de aýdyň görünýär.HDR - de mazmuny göreniňde ýagtylygy 1200 cd / m² ýetýär.Gara we ak reňkleriň iň kiçi kölegelerini - beýleki reňkler ýaly tapawutlandyryp bilersiňiz.Şol bir wagtyň özünde, displeý batareýanyň güýjüni öňküsinden has tygşytly sarp edýär. “Super Retina XDR” displeýinde ajaýyp ýokary piksel dykyzlygy bar, suratlar, wideolar we tekst ajaýyp görünýär. “TrueDepth” kamerasynyň kiçi meýdany sebäpli indi ekranda şekil üçin has köp ýer bar. “iPhone 13” -iň batareýasynyň ömri 2, 5 sagada çenli.A15 Bionic prosessor we TrueDepth kamerasy, şeýle hem ygtybarly ygtybarly tanamak tehnologiýasy Face ID - i güýçlendirýär.Ultra çalt A15 Bionic çipi Kino effekti, Surat stilleri we ş.m.Howpsuz Enklaw, Face ID we aragatnaşyklary goşmak bilen şahsy maglumatlary goraýar.Täze çip bolsa batareýanyň ömrüni artdyrýar.",
                            LineId = 1,
                            Name = "13",
                            TypeId = 0
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 6,
                            CategoryId = 0,
                            DescEn = "The patented SmartFit system allows you to adjust the height and angle of your laptop screen using the included hand chart to find your personal comfort color while reducing neck strain and eye strain.The Easy Riser lifts your laptop off its desktop, promoting airflow to improve battery performance and ease stress on internal components.",
                            DescRu = "Запатентованная система SmartFit позволяет настраивать высоту и угол экрана вашего ноутбука с помощью прилагаемой ручной диаграммы, чтобы найти свой личный цвет комфорта, уменьшая напряжение шеи и напряжение глаз. Easy Riser снимает ваш ноутбук со своего рабочего стола, способствуя воздушному потоку, чтобы улучшить работу аккумулятора и облегчить нагрузку на внутренние компоненты.",
                            DescTm = "Patentlenen SmartFit ulgamy, boýnuň süzülmesini we gözüň dartylmagyny azaltmak bilen şahsy rahatlyk reňkini tapmak üçin goşulan el diagrammasyny ulanyp, noutbuk ekranyňyzyň beýikligini we burçuny sazlamaga mümkinçilik berýär. “Easy Riser”, batareýanyň işleýşini gowulandyrmak we içerki böleklere edilýän stresleri ýeňilleşdirmek üçin noutbukyňyzy iş stolundan çykarýar.",
                            Name = "B2152B",
                            TypeId = 0
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CategoryId = 0,
                            DescEn = "The Samsung Galaxy Fold is a smartphone that is changing the way we think about smartphones. The device combines a huge foldable screen with exceptionally powerful hardware.Multi - window mode displays 3 applications at once.The 7nm Snapdragon 855 processor is boosted by 12GB of RAM.The 512 GB flash drive is built with lightning - fast UFS 3.0 chips.Popular 3D games - PUBG, WoT: Blitz, Asphalt 9 and others - just “fly” here.Maximum pleasure.The unique mechanism will allow the screen to be folded.The reliability of the hinge has been tested 200,000 times.The device opens naturally,smoothly - like a book.The open position is clearly fixed. The connector module turns this smartphone into a compact gadget that is easy to carry around. Samsung Galaxy Fold is tomorrow's technology, available today.	Samsung Galaxy Fold, smartfonlar baradaky pikirimizi üýtgedýän smartfondyr.",
                            DescRu = "Samsung Galaxy Fold — смартфон, меняющий наше представление о смартфонах. Девайс сочетает огромный складной экран с исключительно мощным «железом». Многооконный режим отображает сразу 3 приложения. 7 - нанометровый процессор Snapdragon 855 усилен 12 ГБ оперативной памяти.Флэш - накопитель 512 ГБ построен на молниеносных чипах UFS 3.0.Популярные 3D - игры — PUBG, WoT: Blitz, Asphalt 9 и другие — здесь просто «летают». Удовольствие максимальное.Уникальный механизм позволят экрану складываться.Надежность шарнира проверена 200 000 раз.Девайс открывается естественно, плавно — как книга.Раскрытое положение четко фиксируется.Соединительный модуль превращает этот смартфон в компактный гаджет, который удобно носить с собой.Samsung Galaxy Fold — завтрашний день технологий, доступный уже сегодня.",
                            DescTm = "Enjam ullakan bukulýan ekrany gaty güýçli enjam bilen birleşdirýär. Köp penjire re modeimi birbada 3 programmany görkezýär. 7nm Snapdragon 855 prosessor 12 Gb RAM bilen güýçlendirilýär. 512 Gb fleş disk ýyldyrym çalt UFS 3.0 çipleri bilen gurlupdyr. Meşhur 3D oýunlary - PUBG, WoT: Blits, Asfalt 9 we başgalar - diňe şu ýerde “uçuň”. Iň ýokary lezzet. Üýtgeşik mehanizm ekrany bukmaga mümkinçilik berer. Çeňňegiň ygtybarlylygy 200,000 gezek synag edildi. Enjam kitap ýaly tebigy, rahat açylýar. Açyk pozisiýa anyk kesgitlenendir. Birikdiriji modul, bu smartfony daşamak aňsat bolan ykjam gadgeta öwürýär. Samsung Galaxy Fold, şu gün elýeterli ertirki tehnologiýa.",
                            LineId = 4,
                            Name = "Z Fold 4",
                            TypeId = 0
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.ModelSpec", b =>
                {
                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNameUse")
                        .HasColumnType("bit");

                    b.HasKey("ModelId", "SpecId");

                    b.HasIndex("SpecId");

                    b.ToTable("ModelSpecs");

                    b.HasData(
                        new
                        {
                            ModelId = 1,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 1,
                            SpecId = 2,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 1,
                            SpecId = 3,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 1,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 1,
                            SpecId = 5,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 2,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 2,
                            SpecId = 2,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 2,
                            SpecId = 3,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 2,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 2,
                            SpecId = 5,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 3,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 3,
                            SpecId = 2,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 3,
                            SpecId = 3,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 3,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 3,
                            SpecId = 5,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 4,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 4,
                            SpecId = 2,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 4,
                            SpecId = 3,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 4,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 4,
                            SpecId = 5,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 5,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 5,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 5,
                            SpecId = 5,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 6,
                            SpecId = 1,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 6,
                            SpecId = 2,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 6,
                            SpecId = 3,
                            IsNameUse = true
                        },
                        new
                        {
                            ModelId = 6,
                            SpecId = 4,
                            IsNameUse = false
                        },
                        new
                        {
                            ModelId = 6,
                            SpecId = 5,
                            IsNameUse = false
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId")
                        .IsUnique()
                        .HasFilter("[PurchaseId] IS NOT NULL");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("newTolkuchka.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 4,
                            Name = "Владелец"
                        },
                        new
                        {
                            Id = 2,
                            Level = 3,
                            Name = "Программист"
                        },
                        new
                        {
                            Id = 3,
                            Level = 2,
                            Name = "Менеджер"
                        },
                        new
                        {
                            Id = 4,
                            Level = 1,
                            Name = "Оператор"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit");

                    b.Property<int?>("LineId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.Property<bool>("OnOrder")
                        .HasColumnType("bit");

                    b.Property<string>("PartNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WarrantyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LineId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TypeId");

                    b.HasIndex("WarrantyId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 1,
                            ModelId = 1,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 440.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 1,
                            ModelId = 1,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 440.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 4,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 840.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 4,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 840.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 4,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 840.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1050.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1050.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1050.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1050.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1155.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1155.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1155.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 2,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1155.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1150.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1150.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1150.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1150.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1255.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1255.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1255.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 1,
                            CategoryId = 11,
                            IsNew = false,
                            IsRecommended = false,
                            LineId = 1,
                            ModelId = 3,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1255.00m,
                            TypeId = 1,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 6,
                            CategoryId = 15,
                            IsNew = true,
                            IsRecommended = true,
                            ModelId = 5,
                            NewPrice = 80.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 85.00m,
                            TypeId = 5,
                            WarrantyId = 2
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1600.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1680.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1600.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1680.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1600.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1680.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1500.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1580.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1500.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1580.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 2,
                            CategoryId = 11,
                            IsNew = true,
                            IsRecommended = true,
                            LineId = 4,
                            ModelId = 6,
                            NewPrice = 1500.00m,
                            NotInUse = false,
                            OnOrder = false,
                            Price = 1580.00m,
                            TypeId = 1,
                            WarrantyId = 1
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.ProductSpecsValue", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SpecsValueId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SpecsValueId");

                    b.HasIndex("SpecsValueId");

                    b.ToTable("ProductSpecsValues");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SpecsValueId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            SpecsValueId = 12
                        },
                        new
                        {
                            ProductId = 1,
                            SpecsValueId = 24
                        },
                        new
                        {
                            ProductId = 1,
                            SpecsValueId = 37
                        },
                        new
                        {
                            ProductId = 1,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 2,
                            SpecsValueId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            SpecsValueId = 12
                        },
                        new
                        {
                            ProductId = 2,
                            SpecsValueId = 24
                        },
                        new
                        {
                            ProductId = 2,
                            SpecsValueId = 37
                        },
                        new
                        {
                            ProductId = 2,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueId = 12
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueId = 41
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueId = 12
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueId = 41
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 5,
                            SpecsValueId = 12
                        },
                        new
                        {
                            ProductId = 5,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 5,
                            SpecsValueId = 41
                        },
                        new
                        {
                            ProductId = 5,
                            SpecsValueId = 42
                        },
                        new
                        {
                            ProductId = 5,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 7,
                            SpecsValueId = 5
                        },
                        new
                        {
                            ProductId = 7,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 7,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 7,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 7,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 8,
                            SpecsValueId = 9
                        },
                        new
                        {
                            ProductId = 8,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 8,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 8,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 8,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 9,
                            SpecsValueId = 8
                        },
                        new
                        {
                            ProductId = 9,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 9,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 9,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 9,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 10,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 10,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 10,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 10,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 10,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 11,
                            SpecsValueId = 5
                        },
                        new
                        {
                            ProductId = 11,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 11,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 11,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 11,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 12,
                            SpecsValueId = 9
                        },
                        new
                        {
                            ProductId = 12,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 12,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 12,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 12,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 13,
                            SpecsValueId = 8
                        },
                        new
                        {
                            ProductId = 13,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 13,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 13,
                            SpecsValueId = 43
                        },
                        new
                        {
                            ProductId = 13,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 14,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 14,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 14,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 14,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 14,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 15,
                            SpecsValueId = 5
                        },
                        new
                        {
                            ProductId = 15,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 15,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 15,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 15,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 16,
                            SpecsValueId = 9
                        },
                        new
                        {
                            ProductId = 16,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 16,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 16,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 16,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 17,
                            SpecsValueId = 8
                        },
                        new
                        {
                            ProductId = 17,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 17,
                            SpecsValueId = 25
                        },
                        new
                        {
                            ProductId = 17,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 17,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 18,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 18,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 18,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 18,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 18,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 19,
                            SpecsValueId = 5
                        },
                        new
                        {
                            ProductId = 19,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 19,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 19,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 19,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 20,
                            SpecsValueId = 9
                        },
                        new
                        {
                            ProductId = 20,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 20,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 20,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 20,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 21,
                            SpecsValueId = 8
                        },
                        new
                        {
                            ProductId = 21,
                            SpecsValueId = 13
                        },
                        new
                        {
                            ProductId = 21,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 21,
                            SpecsValueId = 44
                        },
                        new
                        {
                            ProductId = 21,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 22,
                            SpecsValueId = 1
                        },
                        new
                        {
                            ProductId = 22,
                            SpecsValueId = 45
                        },
                        new
                        {
                            ProductId = 22,
                            SpecsValueId = 50
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueId = 27
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueId = 52
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueId = 1
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueId = 27
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueId = 52
                        },
                        new
                        {
                            ProductId = 25,
                            SpecsValueId = 53
                        },
                        new
                        {
                            ProductId = 25,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 25,
                            SpecsValueId = 27
                        },
                        new
                        {
                            ProductId = 25,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 25,
                            SpecsValueId = 52
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueId = 6
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueId = 52
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueId = 1
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueId = 52
                        },
                        new
                        {
                            ProductId = 28,
                            SpecsValueId = 53
                        },
                        new
                        {
                            ProductId = 28,
                            SpecsValueId = 15
                        },
                        new
                        {
                            ProductId = 28,
                            SpecsValueId = 26
                        },
                        new
                        {
                            ProductId = 28,
                            SpecsValueId = 48
                        },
                        new
                        {
                            ProductId = 28,
                            SpecsValueId = 52
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.ProductSpecsValueMod", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SpecsValueModId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SpecsValueModId");

                    b.HasIndex("SpecsValueModId");

                    b.ToTable("ProductSpecsValueMods");

                    b.HasData(
                        new
                        {
                            ProductId = 2,
                            SpecsValueModId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            SpecsValueModId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            SpecsValueModId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            SpecsValueModId = 3
                        },
                        new
                        {
                            ProductId = 23,
                            SpecsValueModId = 4
                        },
                        new
                        {
                            ProductId = 24,
                            SpecsValueModId = 5
                        },
                        new
                        {
                            ProductId = 26,
                            SpecsValueModId = 4
                        },
                        new
                        {
                            ProductId = 27,
                            SpecsValueModId = 5
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseInvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseInvoiceId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("newTolkuchka.Models.PurchaseInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseInvoices");
                });

            modelBuilder.Entity("newTolkuchka.Models.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("NotInUse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Slides");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Layout = 0,
                            Link = "#",
                            Name = "Скидки на сайте tolkuchka.bar",
                            NotInUse = false
                        },
                        new
                        {
                            Id = 2,
                            Layout = 0,
                            Link = "#",
                            Name = "Акции на сайте tolkuchka.bar",
                            NotInUse = false
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsFilter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImaged")
                        .HasColumnType("bit");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NamingOrder")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameRu")
                        .IsUnique();

                    b.HasIndex("NameTm")
                        .IsUnique();

                    b.ToTable("Specs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsFilter = true,
                            IsImaged = true,
                            NameEn = "Color",
                            NameRu = "Цвет",
                            NameTm = "Reňk",
                            NamingOrder = 2,
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            IsFilter = true,
                            IsImaged = false,
                            NameEn = "Memory",
                            NameRu = "Память",
                            NameTm = "Ýat",
                            Order = 2
                        },
                        new
                        {
                            Id = 3,
                            IsFilter = true,
                            IsImaged = false,
                            NameEn = "Storage",
                            NameRu = "Накопитель",
                            NameTm = "Ýatda saklaýjy",
                            NamingOrder = 1,
                            Order = 3
                        },
                        new
                        {
                            Id = 4,
                            IsFilter = false,
                            IsImaged = false,
                            NameEn = "Weight",
                            NameRu = "Вес",
                            NameTm = "Agram",
                            Order = 4
                        },
                        new
                        {
                            Id = 5,
                            IsFilter = false,
                            IsImaged = false,
                            NameEn = "Material",
                            NameRu = "Материал",
                            NameTm = "Material",
                            Order = 0
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecId", "NameEn")
                        .IsUnique();

                    b.HasIndex("SpecId", "NameRu")
                        .IsUnique();

                    b.HasIndex("SpecId", "NameTm")
                        .IsUnique();

                    b.ToTable("SpecsValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameEn = "Black",
                            NameRu = "Черный",
                            NameTm = "Gara",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 2,
                            NameEn = "White",
                            NameRu = "Белый",
                            NameTm = "Ak",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 3,
                            NameEn = "Blue",
                            NameRu = "Синий",
                            NameTm = "Gök",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 4,
                            NameEn = "Red",
                            NameRu = "Красный",
                            NameTm = "Gyzyl",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 5,
                            NameEn = "Green",
                            NameRu = "Зеленый",
                            NameTm = "Ýaşyl",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 6,
                            NameEn = "Gray",
                            NameRu = "Серый",
                            NameTm = "Çal",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 7,
                            NameEn = "Yellow",
                            NameRu = "Желтый",
                            NameTm = "Sary",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 8,
                            NameEn = "Gold",
                            NameRu = "Золотой",
                            NameTm = "Altynsow",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 9,
                            NameEn = "Silver",
                            NameRu = "Серебристый",
                            NameTm = "Kümüşsow",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 10,
                            NameEn = "Brown",
                            NameRu = "Коричневый",
                            NameTm = "Goňur",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 11,
                            NameEn = "2GB",
                            NameRu = "2ГБ",
                            NameTm = "2GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 12,
                            NameEn = "4GB",
                            NameRu = "4ГБ",
                            NameTm = "4GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 13,
                            NameEn = "6GB",
                            NameRu = "6ГБ",
                            NameTm = "6GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 14,
                            NameEn = "8GB",
                            NameRu = "8ГБ",
                            NameTm = "8GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 15,
                            NameEn = "12GB",
                            NameRu = "12ГБ",
                            NameTm = "12GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 16,
                            NameEn = "16GB",
                            NameRu = "16ГБ",
                            NameTm = "16GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 17,
                            NameEn = "32GB",
                            NameRu = "32ГБ",
                            NameTm = "32GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 18,
                            NameEn = "64GB",
                            NameRu = "64ГБ",
                            NameTm = "64GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 19,
                            NameEn = "128GB",
                            NameRu = "128ГБ",
                            NameTm = "128GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 20,
                            NameEn = "256GB",
                            NameRu = "256ГБ",
                            NameTm = "256GB",
                            SpecId = 2
                        },
                        new
                        {
                            Id = 21,
                            NameEn = "8GB",
                            NameRu = "8ГБ",
                            NameTm = "8GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 22,
                            NameEn = "16GB",
                            NameRu = "16ГБ",
                            NameTm = "16GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 23,
                            NameEn = "32GB",
                            NameRu = "32ГБ",
                            NameTm = "32GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 24,
                            NameEn = "64GB",
                            NameRu = "64ГБ",
                            NameTm = "64GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 25,
                            NameEn = "128GB",
                            NameRu = "128ГБ",
                            NameTm = "128GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 26,
                            NameEn = "256GB",
                            NameRu = "256ГБ",
                            NameTm = "256GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 27,
                            NameEn = "512GB",
                            NameRu = "512ГБ",
                            NameTm = "512GB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 28,
                            NameEn = "1TB",
                            NameRu = "1ТБ",
                            NameTm = "1TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 29,
                            NameEn = "2TB",
                            NameRu = "2ТБ",
                            NameTm = "2TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 30,
                            NameEn = "3TB",
                            NameRu = "3ТБ",
                            NameTm = "3TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 31,
                            NameEn = "4TB",
                            NameRu = "4ТБ",
                            NameTm = "4TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 32,
                            NameEn = "5TB",
                            NameRu = "5ТБ",
                            NameTm = "5TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 33,
                            NameEn = "6TB",
                            NameRu = "6ТБ",
                            NameTm = "6TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 34,
                            NameEn = "8TB",
                            NameRu = "8ТБ",
                            NameTm = "8TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 35,
                            NameEn = "10TB",
                            NameRu = "10ТБ",
                            NameTm = "10TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 36,
                            NameEn = "12TB",
                            NameRu = "12ТБ",
                            NameTm = "12TB",
                            SpecId = 3
                        },
                        new
                        {
                            Id = 37,
                            NameEn = "144g",
                            NameRu = "144гр",
                            NameTm = "144g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 38,
                            NameEn = "212g",
                            NameRu = "212гр",
                            NameTm = "212g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 39,
                            NameEn = "570g",
                            NameRu = "570гр",
                            NameTm = "570g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 40,
                            NameEn = "1.1kg",
                            NameRu = "1.1кг",
                            NameTm = "1.1kg",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 41,
                            NameEn = "174g",
                            NameRu = "174гр",
                            NameTm = "174g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 42,
                            NameEn = "Pink",
                            NameRu = "Розовый",
                            NameTm = "Gülgüne",
                            SpecId = 1
                        },
                        new
                        {
                            Id = 43,
                            NameEn = "203g",
                            NameRu = "203гр",
                            NameTm = "203g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 44,
                            NameEn = "238g",
                            NameRu = "238гр",
                            NameTm = "238g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 45,
                            NameEn = "Plastic",
                            NameRu = "Пластик",
                            NameTm = "Plastik",
                            SpecId = 5
                        },
                        new
                        {
                            Id = 46,
                            NameEn = "Metal",
                            NameRu = "Металл",
                            NameTm = "Metal",
                            SpecId = 5
                        },
                        new
                        {
                            Id = 47,
                            NameEn = "Glass",
                            NameRu = "Стекло",
                            NameTm = "Aýna",
                            SpecId = 5
                        },
                        new
                        {
                            Id = 48,
                            NameEn = "Metal and glass",
                            NameRu = "Металл и стекло",
                            NameTm = "Metal we aýna",
                            SpecId = 5
                        },
                        new
                        {
                            Id = 49,
                            NameEn = "Metal and plastic",
                            NameRu = "Металл и пластик",
                            NameTm = "Metal we plastik",
                            SpecId = 5
                        },
                        new
                        {
                            Id = 50,
                            NameEn = "850g",
                            NameRu = "850гр",
                            NameTm = "850g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 51,
                            NameEn = "950g",
                            NameRu = "950гр",
                            NameTm = "950g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 52,
                            NameEn = "263g",
                            NameRu = "263гр",
                            NameTm = "263g",
                            SpecId = 4
                        },
                        new
                        {
                            Id = 53,
                            NameEn = "Beige",
                            NameRu = "Бежевый",
                            NameTm = "Bej",
                            SpecId = 1
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValueMod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpecsValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecsValueId");

                    b.ToTable("SpecsValueMods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameEn = "Midnight",
                            NameRu = "Полночь",
                            NameTm = "Ýary gije",
                            SpecsValueId = 1
                        },
                        new
                        {
                            Id = 2,
                            NameEn = "Starlight",
                            NameRu = "Звездный свет",
                            NameTm = "Ýyldyz yşky",
                            SpecsValueId = 2
                        },
                        new
                        {
                            Id = 3,
                            NameEn = "Graphite",
                            NameRu = "Графитовый",
                            NameTm = "Grafit",
                            SpecsValueId = 6
                        },
                        new
                        {
                            Id = 4,
                            NameEn = "Graygreen",
                            NameRu = "Серо-зеленый",
                            NameTm = "Çal-ýaşyl",
                            SpecsValueId = 6
                        },
                        new
                        {
                            Id = 5,
                            NameEn = "Phantom Black",
                            NameRu = "Фантомный черный",
                            NameTm = "Fantom gara",
                            SpecsValueId = 1
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneMain")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneSecondary")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "11 мкр-н, ул. А.Ниязова 44",
                            Name = "Ak yol",
                            PhoneMain = "280401",
                            PhoneSecondary = "726849"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Оптовка",
                            Name = "Hajy",
                            PhoneMain = "99364919890"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameRu")
                        .IsUnique();

                    b.HasIndex("NameTm")
                        .IsUnique();

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameEn = "Mobile phone",
                            NameRu = "Мобильный телефон",
                            NameTm = "Öýjukli telefon"
                        },
                        new
                        {
                            Id = 2,
                            NameEn = "Laptop",
                            NameRu = "Ноутбук",
                            NameTm = "Noutbuk"
                        },
                        new
                        {
                            Id = 3,
                            NameEn = "Monoblock",
                            NameRu = "Моноблок",
                            NameTm = "Monoblok"
                        },
                        new
                        {
                            Id = 4,
                            NameEn = "Refrigerator",
                            NameRu = "Холодильник",
                            NameTm = "Doňduryjy"
                        },
                        new
                        {
                            Id = 5,
                            NameEn = "Notebook stand",
                            NameRu = "Подставка для ноутбука",
                            NameTm = "Noutbuk goltugy"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Magtymguly 150/10",
                            BirthDay = new DateTime(1984, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "durdysagty@mail.ru",
                            IsPhoneConfirmed = false,
                            Name = "Durdy",
                            Phone = "99365811482",
                            Pin = "8/Bljhsa9Fyja/87ddqryA=="
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Warranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameRu")
                        .IsUnique();

                    b.HasIndex("NameTm")
                        .IsUnique();

                    b.ToTable("Warranties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameEn = "1 week",
                            NameRu = "1 неделя",
                            NameTm = "1 hepde"
                        },
                        new
                        {
                            Id = 2,
                            NameEn = "1 month",
                            NameRu = "1 месяц",
                            NameTm = "1 aý"
                        },
                        new
                        {
                            Id = 3,
                            NameEn = "3 months",
                            NameRu = "3 месяца",
                            NameTm = "3 aý"
                        },
                        new
                        {
                            Id = 4,
                            NameEn = "6 months",
                            NameRu = "6 месяцев",
                            NameTm = "6 aý"
                        },
                        new
                        {
                            Id = 5,
                            NameEn = "1 year",
                            NameRu = "1 год",
                            NameTm = "1 ýyl"
                        });
                });

            modelBuilder.Entity("newTolkuchka.Models.Wish", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Wishes");
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryAdLink", b =>
                {
                    b.HasOne("newTolkuchka.Models.Category", "Category")
                        .WithMany("CategoryAdLinks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryModelAdLink", b =>
                {
                    b.HasOne("newTolkuchka.Models.Category", "Category")
                        .WithMany("CategoryModelAdLinks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Model", "Model")
                        .WithMany("CategoryModelAdLinks")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("newTolkuchka.Models.CategoryProductAdLink", b =>
                {
                    b.HasOne("newTolkuchka.Models.Category", "Category")
                        .WithMany("CategoryProductAdLinks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany("CategoryProductAdLinks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("newTolkuchka.Models.Employee", b =>
                {
                    b.HasOne("newTolkuchka.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("newTolkuchka.Models.Invoice", b =>
                {
                    b.HasOne("newTolkuchka.Models.Currency", "Currency")
                        .WithMany("Invoices")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId");

                    b.Navigation("Currency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("newTolkuchka.Models.Line", b =>
                {
                    b.HasOne("newTolkuchka.Models.Brand", "Brand")
                        .WithMany("Lines")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("newTolkuchka.Models.Model", b =>
                {
                    b.HasOne("newTolkuchka.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Category", "Category")
                        .WithMany("Models")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Line", "Line")
                        .WithMany("Models")
                        .HasForeignKey("LineId");

                    b.HasOne("newTolkuchka.Models.Type", "Type")
                        .WithMany("Models")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Warranty", "Warranty")
                        .WithMany("Models")
                        .HasForeignKey("WarrantyId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Line");

                    b.Navigation("Type");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("newTolkuchka.Models.ModelSpec", b =>
                {
                    b.HasOne("newTolkuchka.Models.Model", "Model")
                        .WithMany("ModelSpecs")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Spec", "Spec")
                        .WithMany("ModelSpecs")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("newTolkuchka.Models.Order", b =>
                {
                    b.HasOne("newTolkuchka.Models.Invoice", "Invoice")
                        .WithMany("Orders")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Purchase", "Purchase")
                        .WithOne("Order")
                        .HasForeignKey("newTolkuchka.Models.Order", "PurchaseId");

                    b.Navigation("Invoice");

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("newTolkuchka.Models.Product", b =>
                {
                    b.HasOne("newTolkuchka.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Line", "Line")
                        .WithMany("Products")
                        .HasForeignKey("LineId");

                    b.HasOne("newTolkuchka.Models.Model", "Model")
                        .WithMany("Products")
                        .HasForeignKey("ModelId");

                    b.HasOne("newTolkuchka.Models.Type", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Warranty", "Warranty")
                        .WithMany("Products")
                        .HasForeignKey("WarrantyId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Line");

                    b.Navigation("Model");

                    b.Navigation("Type");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("newTolkuchka.Models.ProductSpecsValue", b =>
                {
                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany("ProductSpecsValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.SpecsValue", "SpecsValue")
                        .WithMany("ProductSpecsValues")
                        .HasForeignKey("SpecsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SpecsValue");
                });

            modelBuilder.Entity("newTolkuchka.Models.ProductSpecsValueMod", b =>
                {
                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany("ProductSpecsValueMods")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.SpecsValueMod", "SpecsValueMod")
                        .WithMany("ProductSpecsValueMods")
                        .HasForeignKey("SpecsValueModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SpecsValueMod");
                });

            modelBuilder.Entity("newTolkuchka.Models.Purchase", b =>
                {
                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany("Purchases")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.PurchaseInvoice", "PurchaseInvoice")
                        .WithMany("Purchases")
                        .HasForeignKey("PurchaseInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseInvoice");
                });

            modelBuilder.Entity("newTolkuchka.Models.PurchaseInvoice", b =>
                {
                    b.HasOne("newTolkuchka.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.Supplier", "Supplier")
                        .WithMany("PurchaseInvoices")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValue", b =>
                {
                    b.HasOne("newTolkuchka.Models.Spec", "Spec")
                        .WithMany("SpecsValues")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValueMod", b =>
                {
                    b.HasOne("newTolkuchka.Models.SpecsValue", "SpecsValue")
                        .WithMany("SpecsValueMods")
                        .HasForeignKey("SpecsValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecsValue");
                });

            modelBuilder.Entity("newTolkuchka.Models.Wish", b =>
                {
                    b.HasOne("newTolkuchka.Models.Product", "Product")
                        .WithMany("Wishes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("newTolkuchka.Models.User", "User")
                        .WithMany("Wishes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("newTolkuchka.Models.Brand", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("Models");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("newTolkuchka.Models.Category", b =>
                {
                    b.Navigation("CategoryAdLinks");

                    b.Navigation("CategoryModelAdLinks");

                    b.Navigation("CategoryProductAdLinks");

                    b.Navigation("Models");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("newTolkuchka.Models.Currency", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("newTolkuchka.Models.Invoice", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("newTolkuchka.Models.Line", b =>
                {
                    b.Navigation("Models");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("newTolkuchka.Models.Model", b =>
                {
                    b.Navigation("CategoryModelAdLinks");

                    b.Navigation("ModelSpecs");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("newTolkuchka.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("newTolkuchka.Models.Product", b =>
                {
                    b.Navigation("CategoryProductAdLinks");

                    b.Navigation("ProductSpecsValueMods");

                    b.Navigation("ProductSpecsValues");

                    b.Navigation("Purchases");

                    b.Navigation("Wishes");
                });

            modelBuilder.Entity("newTolkuchka.Models.Purchase", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("newTolkuchka.Models.PurchaseInvoice", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("newTolkuchka.Models.Spec", b =>
                {
                    b.Navigation("ModelSpecs");

                    b.Navigation("SpecsValues");
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValue", b =>
                {
                    b.Navigation("ProductSpecsValues");

                    b.Navigation("SpecsValueMods");
                });

            modelBuilder.Entity("newTolkuchka.Models.SpecsValueMod", b =>
                {
                    b.Navigation("ProductSpecsValueMods");
                });

            modelBuilder.Entity("newTolkuchka.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseInvoices");
                });

            modelBuilder.Entity("newTolkuchka.Models.Type", b =>
                {
                    b.Navigation("Models");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("newTolkuchka.Models.User", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Wishes");
                });

            modelBuilder.Entity("newTolkuchka.Models.Warranty", b =>
                {
                    b.Navigation("Models");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
